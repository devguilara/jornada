version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      args:
        PUID: ${PUID:-1000}
        PGID: ${PGID:-1000}
    container_name: jornada_casamento_app
    restart: unless-stopped
    volumes:
      - .:/var/www/html
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network # <-- Esta linha agora fará referência a uma rede definida abaixo

  web:
    image: nginx:stable-alpine
    container_name: jornada_casamento_web
    restart: unless-stopped
    ports:
      - "45:80"
    volumes:
      - .:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      app:
        condition: service_started
    networks:
      - app-network # <-- Esta linha agora fará referência a uma rede definida abaixo

  db:
    image: mysql:8.0
    container_name: jornada_casamento_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - app-network # <-- Esta linha agora fará referência a uma rede definida abaixo
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 30s

# --- ADICIONE ESTA SEÇÃO AQUI NO FINAL DO ARQUIVO ---
networks:
  app-network:
    driver: bridge

volumes:
  dbdata:
    driver: local